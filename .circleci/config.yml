version: 2
jobs:
  build:
    working_directory: ~/app
    docker:
      - image: circleci/node:8.11-browsers
        environment:
          # lang settings required for Meteor's Mongo
          LANG: C.UTF-8
          LANGUAGE: C.UTF-8
          LC_ALL: C.UTF-8
          LC_NUMERIC: en_US.UTF-8
          METEOR_BIN_TMP_DIR: /home/circleci/build-temp/
          METEOR_BIN_TMP_FILE: meteor-bin-temp
    steps:
      - checkout
      - restore_cache:
          key: build-temp-{{ checksum ".meteor/release" }}-{{ checksum ".circleci/config.yml" }}
      - restore_cache:
          key: meteor-release-{{ checksum ".meteor/release" }}-{{ checksum ".circleci/config.yml" }}
      - restore_cache:
          key: meteor-packages-{{ checksum ".meteor/versions" }}-{{ checksum ".circleci/config.yml" }}
      - restore_cache:
          key: npm-packages-{{ checksum "package.json" }}-{{ checksum ".circleci/config.yml" }}
      - run:
          name: install build essentials
          command: sudo apt-get install -y build-essential
      - run:
          name: restore cached meteor bin
          command: |
            if [ -e ~/build-temp/meteor-bin ]
            then
                echo "Cached Meteor bin found, restoring it."
                sudo cp ~/build-temp/meteor-bin /usr/local/bin/meteor
            else
                echo "No cached Meteor bin found."
            fi
      - run:
          name: install Meteor
          command: |
            # only install meteor if bin isn't found
            command -v meteor >/dev/null 2>&1 || curl https://install.meteor.com | /bin/sh
      - run:
            name: install Chimp & other building tools
            command: |
                sudo npm install -g chimp
                sudo meteor npm install --save bcrypt
      - run:
          name: check versions
          command: |
            echo "Meteor version:"
            # this forces Meteor to download whatever release your project is using
            sudo meteor --version
            sudo which meteor
            echo "Meteor node version:"
            sudo meteor node -v
            echo "Meteor npm version:"
            sudo meteor npm -v
            # echo "Java version:"
            # sudo java -version
      - run: 
          name: install npm packages
          command: sudo meteor npm i
      - run:
          name: code linting
          command: |
            sudo meteor npm run lint --silent
      - run:
          name: unit tests
          command: |
            sudo meteor test --once --driver-package dispatch:mocha-phantomjs
      # - run:
      #     name: start app and run e2e tests
      #     command: meteor npm run test:e2e-standalone
      #     no_output_timeout: 5m
      - run:
          name: copy meteor bin to build cache
          command: |
            mkdir -p ~/build-temp
            cp /usr/local/bin/meteor ~/build-temp/meteor-bin
      - save_cache:
          key: build-temp-{{ checksum ".meteor/release" }}-{{ checksum ".circleci/config.yml" }}
          paths:
            - ~/build-temp
      - save_cache:
          key: meteor-release-{{ checksum ".meteor/release" }}-{{ checksum ".circleci/config.yml" }}
          paths:
            - ~/.meteor
      - save_cache:
          key: meteor-packages-{{ checksum ".meteor/versions" }}-{{ checksum ".circleci/config.yml" }}
          paths:
            - .meteor/
      - save_cache:
          key: npm-packages-{{ checksum "package.json" }}-{{ checksum ".circleci/config.yml" }}
          paths:
            - ./node_modules/
            - ~/.npm/
      - run:
        name: deploy to galaxy ...
        command: |
          meteor deploy
      - store_test_results:
          path: ./tests/coverage/unit-tests/
      - store_artifacts:
          path: ./tests/coverage/unit-tests/
          destination: unit-tests